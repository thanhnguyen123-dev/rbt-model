[
{"url": "https://programsandcourses.anu.edu.au/course/COMP6780", "title": "Web Development and Design", "code": "COMP6780", "learning_outcomes": ["Understand and be able to develop and design interactive web sites including multimedia content by applying current web design principles, guidelines and heuristics.", "Apply a user-centred focus to the design and development of web sites.", "Demonstrate knowledge of accessibility, compliance with standards, privacy concerns and personalisation for web sites.", "Understand and be able to separately control the content, the appearance and the behaviour of web sites.", "Understand and report on the nature and practice of human computer interaction research in an ethical environment."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6670", "title": "Introduction to Machine Learning", "code": "COMP6670", "learning_outcomes": ["Develop an appreciation for what is involved in learning from data", "Understand basic data wrangling and data exploration", "Describe a variety of machine learning tasks: clustering, dimensionality reduction, regression and classification", "Understand how to formalise practical problems in terms of above tasks", "Interpret mathematical equations from linear algebra, calculus, statistics, and probability theory in terms of machine learning methods", "Understand how to perform evaluation of and reflect on learning algorithms and model selection in practical problems"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6528", "title": "Computer Vision", "code": "COMP6528", "learning_outcomes": ["Proficiently apply specialised knowledge, methods and skills in image processing and computer vision applications, research and development.", "Identify, formulate and innnovatively solve problems in image processing and computer vision.", "Critically analyse, evaluate and examine existing practical computer vision systems.", "Communicate effectively to both specialist and non-specialist audiences to integrate and synthesize complex visual information processing systems.", "Critically review and assess scientific literature in the field and and apply theoretical knowledge to identify the novelty and practicality of proposed methods.", "Design and develop practical and innovative image processing and computer vision applications or systems using advanced knowledge and embedding research methods.", "Conduct themselves professionally and responsibly in the areas of computer vision, image processing and deep learning."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6720", "title": "Art and Interaction Computing", "code": "COMP6720", "learning_outcomes": ["Describe the qualities of computer-based artworks and recent developments in interactive computational art.", "Apply knowledge of visual and physical interaction with a computer interface including recent developments.", "Design and construct computer programs in a programming language for interactive art.", "Create and evaluate an original and creative work of interactive art."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6730", "title": "Programming for Scientists", "code": "COMP6730", "learning_outcomes": ["Design and write programming code to solve practical problems of a scientific or engineering nature.", "Ability to read, test and debug small computer programs.", "Advanced ability to use key python libraries for data processing and visualisation.", "Advanced understanding of widely-used algorithms and data structures, and their computational complexity.", "Advanced understanding of design approaches used in scientific pipelines, including data abstraction and array-based and object-oriented programming.", "Advanced understanding of algorithm design paradigms, such as dynamic programming, and their scientific applications.", "Understand and apply principles of high code quality.", "Communicate effectively to both specialist and non-specialist audiences about data processing problems in writing and verbally."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6540", "title": "Game Development", "code": "COMP6540", "learning_outcomes": ["Explain game development theory and architecture", "Apply appropriate techniques and tools in the production of video games", "Analyse how game elements influence player experience", "Work effectively in a team environment to create video games", "Successfully communicate game development ideas, concepts, designs, models, and processes", "Evaluate game development outcomes in terms of current industry practice and recent developments"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6490", "title": "Document Analysis", "code": "COMP6490", "learning_outcomes": ["Differentiate between the basic probabilistic theories of language and document structure, information retrieval, and classification, clustering and document feature engineering.", "Identify the basic algorithms and software available for probabilistic theories of language and be proficient at using common libraries for natural language processing to perform basic analysis tasks.", "Index a document collection for use in an information retrieval system. Demonstrate advanced knowledge of basic theories and algorithms to determine large scale named-entity matching and standardization of names within a collection.", "Perform automated classification using probabilistic theories."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6464", "title": "High Performance Scientific Computing", "code": "COMP6464", "learning_outcomes": ["Appreciate the building blocks of scientific and engineering software.", "Demonstrate knowledge of numerical computing using an appropriate programming language.", "Be proficient in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.", "Be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.", "Have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.", "Have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.", "Be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6710", "title": "Structured Programming", "code": "COMP6710", "learning_outcomes": ["Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems", "Understand basic types and the benefits of static typing for object oriented programs", "Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system", "Use, implement, and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems; implement an abstract data type", "Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems", "Deliver and evaluate technical documents, presentations, and group interactions, using appropriate tools"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6390", "title": "Human-Computer Interaction", "code": "COMP6390", "learning_outcomes": ["Explain and illustrate key aspects of human-computer interaction.", "Apply multiple perspectives, theories, and ethical and inclusive considerations in critiquing technologies and prototyping and developing new design ideas.", "Investigate activities, practices, and contexts of technology use through contextual research methods.", "Critically evaluate novel technology design ideas based on Human-Computer Interaction approaches.", "Critically reflect on a designerâ€™s own presence and influence within a technology design process."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6470", "title": "Special Topics in Computing", "code": "COMP6470", "learning_outcomes": ["Learning Outcomes will be determined for each individual student and recorded in an 'Independent Study Contract' at the beginning of the course."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6363", "title": "Theory of Computation", "code": "COMP6363", "learning_outcomes": ["Demonstrate advanced knowledge of formal computation and its relationship to languages", "Distinguish different computing languages and classify their respective types", "Recognise and comprehend formal reasoning about languages", "Demonstrate a competent understanding of the concepts of complexity theory"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6445", "title": "Computing Research Methods", "code": "COMP6445", "learning_outcomes": ["Effectively communicate research questions, methods and outcomes in oral, written and graphical forms to a broad audience using appropriate tools.", "Justify and apply appropriate technological choices based on an advanced consideration of the research question and methods.", "Explain the process of identifying, composing and formulating research questions.", "Apply effective literature search and critical evaluation skills.", "Explain the role academic integrity and the importance of building upon and correctly attributing the work of others."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6442", "title": "Software Construction", "code": "COMP6442", "learning_outcomes": ["Apply object-oriented programming concepts for medium-scale software projects", "Understand the fundamentals of life cycle models for developing medium-scale software projects", "Apply and Evaluate software construction principles across various life cycle stages in medium-scale software projects", "Understand fundamental concepts of GUIs and user interfaces", "Understand basic concepts of intellectual property in software construction, considering ethical and social implications of technical decisions", "Apply and Evaluate techniques for data manipulation in medium-scale software projects", "Understand and analyse relevant scientific literature in the field of software construction."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8830", "title": "Computing Internship", "code": "COMP8830", "learning_outcomes": ["Demonstrate a personal commitment to ethical behaviour, competent practice, meeting legal and regulatory requirements, taking responsibility for their own work and acknowledging the work of others.", "Demonstrate autonomy, adaptability, a commitment to safety and sustainability, appropriate engagement with relevant stakeholders, and an ability to identify, assess and manage risk.", "Communicate effectively and work productively in a multi-disciplinary team, using initiative and sound judgement, to achieve defined workplace objectives.", "Apply their knowledge and skills in computer science to explore and critically analyse a real-world problem; using creativity and innovation, identify and critically evaluate potential solutions to the problem; choose and implement a particular solution; and critically evaluate and analyse the outcomes and impact of this solution.", "Demonstrate an understanding of lifelong learning processes, and clarification of their personal and professional goals, through critical reflection on their internship experience."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6466", "title": "Algorithms", "code": "COMP6466", "learning_outcomes": ["Display a solid understanding of classical algorithms for fundamental computing problems such as sorting and searching and their analysis.", "Demonstrate deep knowledge of various data structures, such as binary search trees and heaps, and their applications.", "Design efficient algorithms using techniques such as greedy approaches and dynamic programming.", "Analyse the time and space complexity of algorithms."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8880", "title": "Computational Methods for Network Science", "code": "COMP8880", "learning_outcomes": ["Demonstrate a thorough understanding of the fundamental principles of using computational approaches to formulate and answer social science questions.", "Demonstrate a working understanding in the ethical concerns of data drive analysis and experiments in human behavior.", "Apply network analysis algorithms in practical contexts.", "Analyze results from network algorithms, and articulate their limitations.", "Migrate insights from network analysis and simulation into new data and application scenarios.", "Communicate the process of formulating and solving computational social science problems to a team of professionals with computing and/or social sciences."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8820", "title": "Exchange Program for Graduate Students in Computer Science", "code": "COMP8820", "learning_outcomes": ["NA - Shell code"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8715", "title": "Advanced Computing Team Project", "code": "COMP8715", "learning_outcomes": ["Apply the student's knowledge and implementation skills in the computer science, and apply this to an advanced and specific project topic in that area.", "Deepen their knowledge of computing principles and practice through undertaking the project.", "Learn any specific technical skills required by their topic, and apply them to project work.", "Apply and deepen skills in oral and written communication, and apply these in a project context.", "Apply relevant project-related skills, including project management, teamwork, ethics in research, knowledge of relevant research, evaluation and production of project artifacts."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8800", "title": "Advanced Computing Research Project", "code": "COMP8800", "learning_outcomes": ["Identify a question/problem in a particular field of computing and devise a plan for a research project to investigate the topic.", "Implement effective literature search and critical evaluation skills to complete a literature survey in the project topic area.", "Select and apply appropriate research methods, tools, techniques to develop research findings and insights.", "Effectively communicate research questions, methods and outcomes in oral, written and graphical forms to a broad audience using appropriate tools.", "Produce a structured written thesis demonstrating an advanced understanding of the chosen research area."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8712", "title": "Compiler Construction", "code": "COMP8712", "learning_outcomes": ["Explain how programs that process other programs treat the other programs as their input data, and describe the benefits of having program representations other than source code.", "Distinguish a language definition (syntax and semantics) from a particular language implementation (evaluation by interpreter or by compilation).", "Use formal grammars to specify the syntax of languages, and understand key issues of ambiguity, associativity and precedence.", "Sketch a low-level run-time representation of core language constructs, such as objects or closures.", "Identify and implement essential steps for automatically converting source code into assembly or other low-level languages.", "Define useful static analyses in terms of a conceptual framework such as data-flow analysis and use the results of a static analysis for program optimization.", "Critique language designs and implications for language implementation."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8650", "title": "Advanced Topics in Machine Learning", "code": "COMP8650", "learning_outcomes": ["Review the fundamental concepts and techniques of theÂ machine learning advanced topic.", "Reflect critically on the suitability of studied concepts and techniques for solving machine learning problems.", "Critically read research papers in the advanced topic area.", "Construct suitable models of the advanced topic.", "Plan and execute project work and/or a piece of research and scholarship in the advanced topic."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8610", "title": "Computer Graphics", "code": "COMP8610", "learning_outcomes": ["Explain the stages of a modern, hardware-accelerated 3D rendering pipeline", "Construct and manipulate complex models, geometries and scene graphs in both 2D and 3D", "Implement computer graphics algorithms in a shader language", "Compare and evaluate different computer graphics techniques based on performance, aesthetic and implementation difficulty"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8691", "title": "Optimisation", "code": "COMP8691", "learning_outcomes": ["Be able to apply Linear Programming and Mixed-Integer Programming model to solve real-world problems.", "Be able to recognize and formulate convex optimization problems arising in practice.", "Demonstrate an understanding of theoretical foundations of convex optimization and be able to use it to characterize optimal solutions to general problems.", "Be able to define an appropriate local search neighbourhood for a given problem.", "Be able to use and reflect on a variety of meta-heuristics to escape local minima in a neighbourhood.", "Demonstrate an understanding and reflect on of the propagation of a global constraint in a Constraint programming system."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8670", "title": "Advanced Topics in Logic and Computation", "code": "COMP8670", "learning_outcomes": ["Understand classical and non-classical logical systems and their significance", "Evaluate differences (advantages/disadvantages) of logical systems", "Analyse the syntax and semantics of logics and their meta-theoretical properties", "Formalise semantic properties and interpret syntactic properties", "Apply translation principles for comparing different logical systems", "Create mathematical proofs in the area of formal logic", "Reflect on common logical systems and evaluate their limitations"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8620", "title": "Advanced Topics in Artificial intelligence", "code": "COMP8620", "learning_outcomes": ["Gain both a wide and a deep knowledge of the topic(s) taught in the current instance of the course.", "Navigate through, and critically examine, the scientific literature on the taught topic(s).", "Plan and execute project work and/or a piece of research and scholarship in the advanced topic(s)", "Reflect on current approaches of the advanced topic(s) and evaluate their limitations"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8535", "title": "Engineering Data Analytics", "code": "COMP8535", "learning_outcomes": ["Describe a number of models for inference from data", "Assess the strength and weakness of each of these models", "Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in the learning models", "Implement efficient data analysis algorithms on a computer", "Design test procedures in order to evaluate a model", "Combine several models in order to gain better results"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8539", "title": "Advanced Topics in Computer Vision", "code": "COMP8539", "learning_outcomes": ["Describe and analyze the main research challenges in the field of computer vision.", "Summarize research literature and state-of-the-art techniques for solving the challenging research problems in those areas.", "Model and formulate problems, propose effective solutions to the problem and implement algorithms using suitable programming languages.", "Design network structure and loss functions in cases where problems need to be solved using deep learning techniques.", "Analyze the results and effectively evaluate the results on benchmark datasets."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8600", "title": "Statistical Machine Learning", "code": "COMP8600", "learning_outcomes": ["Describe a number of models for supervised, unsupervised, and reinforcement machine learning", "Assess the strength and weakness of each of these models", "Interpret\n the mathematical equations from Linear Algebra, Statistics, and \nProbability Theory used in these machine learning models", "Implement efficient machine learning algorithms on a computer", "Design test procedures in order to evaluate a model", "Combine several models in order to gain better results", "Make choices for a model for new machine learning tasks based on reasoned argument"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8460", "title": "Advanced Algorithms", "code": "COMP8460", "learning_outcomes": ["Display a deep understanding of classical approximation and graph algorithms and their analysis.", "Analyse the efficiency and correctness of randomized algorithms and data structures.", "Demonstrate a good knowledge of parallel, distributed, and online algorithms.", "Design and analyse efficient algorithms using various advanced algorithmic techniques such as linear programming, graph theory, probability theory, and algebra.", "Understand, analyse, summarize, and present research publications in the area of algorithm design."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8430", "title": "Data Wrangling", "code": "COMP8430", "learning_outcomes": ["Critically reflect upon different data sources, types, formats, and structures,", "Research, justify and apply data cleaning, preprocessing, and standardisation for data analytics,", "Apply data integration concepts and techniques to heterogeneous and distributed data,", "Interpret, assess and discuss data quality measurements,", "Research and justify advanced data wrangling, data integration, and database techniques as relevant to data analytics"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8410", "title": "Data Mining", "code": "COMP8410", "learning_outcomes": ["Critically analyse and justify the steps involved in the data mining process,", "Anticipate and identify data issues related to data mining,", "Research, test and apply the principal algorithms and techniques used in data mining,", "Justify suitable techniques to use for a given data mining problem,", "Appraise and reflect upon the results of a data mining project using suitable measurements,", "Investigate application areas and current research directions of data mining,", "Reflect upon ethical and social impacts of data mining."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8300", "title": "Parallel Systems", "code": "COMP8300", "learning_outcomes": ["Be proficient at programming multiple parallel machines in more than one special programming language or programming system", "Be able to descriptively compare the performance of different programs and methods on one machine", "Demonstrate advanced knowledge of the elements of parallel programming language and system implementation", "Critique the history of parallel systems and review the developments in the field"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8350", "title": "Sound and Music Computing", "code": "COMP8350", "learning_outcomes": ["Describe and apply fundamental conceptsÂ and recent developments in sound and music computing.", "Apply collaboration skills with computer musicians through design feedback and critical self-reflection.", "Critically examine computer music systems, interfaces and performances in terms of recent developments in the field.", "Create a computer musical instrument, composition or interactive media work that reflects recent developments in the field."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8260", "title": "Professional Practice: Responsible Innovation and Leadership", "code": "COMP8260", "learning_outcomes": ["Demonstrate understanding of the responsibilities of membership in a professional community through engagement in ethical reflective practice, critical self-review and peer evaluation.", "Justify, interpret and communicate professional propositions and decisions to technical and non-technical audiences.", "Identify, analyse and synthesise information from multiple sources when developing solutions to complex problems.", "Apply creativity, sensitivity, and initiative to decision-making and leadership of diverse team activities, especially where these involve negotiation of disparate stakeholder requirements."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8045", "title": "Advanced Topics in Computer Systems & Architecture", "code": "COMP8045", "learning_outcomes": ["Demonstrate a broad knowledge in the advanced topic and its role and applications in modern computing systems", "Critically evaluate the scientific literature related to the advanced topic and/or applications of the advanced topic in modern computing systems", "Plan and execute project work and/or a piece of research and scholarship in the advanced topic", "Reflect on current approaches of the advanced topic and evaluate their limitations"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8536", "title": "Advanced Topics in Deep Learning for Computer Vision", "code": "COMP8536", "learning_outcomes": ["Describe and apply the theory of convolutional neural networks and the universal approximation theorem.", "Apply the theory of training a convolutional neural network.", "Write programs to design, train and test neural networks to solve problems in computer vision.", "Competently apply programming and software tools to write programs to solve realistic problems of computer vision using deep neural networks.", "Understand the principals of testing and evaluating the performance of deep neural networks, and apply these principals in practice.", "Research an area of computer vision and apply deep neural network methods to a problem in that area."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP8011", "title": "Advanced Topics in Formal Methods and Programming Languages    ", "code": "COMP8011", "learning_outcomes": ["Demonstrate a broad knowledge in the advanced topic and its role and applications in modern computing systems", "Critically evaluate the scientific literature related to the advanced topic and/or applications of the advanced topic in modern computing systems", "Plan and execute project work and/or a piece of research and scholarship in the advanced topic", "Reflect on current approaches of the advanced topic and evaluate their limitations"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6331", "title": "Computer Networks", "code": "COMP6331", "learning_outcomes": ["Interpret, articulate and critically review the layered protocol model.", "Articulate, analyse and appraise a number of datalink, network, and transport layer protocols.", "Program network communication services for client/server and other application layouts.", "Articulate, analyse and appraise various related technical, administrative and social aspects of specific computer network protocols from standards documents and other primary materials found through research.", "Design, analyse, and recommend networks and services for homes, data centres, IoT/IoE, LANs and WANs."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6261", "title": "Information Theory", "code": "COMP6261", "learning_outcomes": ["Understand and \napply fundamental concepts in information theory such as probability, \nentropy, information content and their inter-relationships.", "Understand the principles of data compression.", "Compute entropy and mutual information of random variables.", "Implement and analyse basic coding and compression algorithms.", "Understand\n the relationship of information theoretical principles and Bayesian \ninference in data modelling and pattern recognition.", "Understand some key theorems and inequalities that quantify essential limitations on compression, communication and inference.", "Know the basic concepts regarding communications over noisy channels."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6330", "title": "Operating Systems Implementation", "code": "COMP6330", "learning_outcomes": ["Identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications", "Describe and analyse the actual algorithms and data structures that are used in a particular operating system", "Define and analyse the structure of operating systems in general, especially those that support communicating processes", "Identify and describe the reasons for many architectural features of contemporary machines", "Demonstrate advanced experience in the design and implementation of a large software system"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6361", "title": "Principles of Programming Languages", "code": "COMP6361", "learning_outcomes": ["Understand the role of theoretical formalisms, such as operational and denotational semantics", "Apply these semantics in the context of programming languages", "Evaluate differences (advantages/disadvantages) of these theoretical formalisms", "Create operational or denotational semantics of simple imperative programs", "Analyse the role of types in programming languages", "Formalise properties and reason about programs", "Apply basic principles for formalising concurrent programming languages", "Reflect on current approaches to reason about concurrent systems and evaluate their limitations"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6320", "title": "Artificial Intelligence", "code": "COMP6320", "learning_outcomes": ["Identify problems that are amenable to solution by AI methods, and which AI methods may be suited to solving a given problem.", "Formalise a given problem in the language/framework of different AI methods (e.g., as a search problem, as a constraint satisfaction problem, as a planning problem, etc).", "Implement basic AI algorithms (e.g., standard search or constraint propagation algorithms).", "Design and perform an empirical evaluation of different algorithms on a problem formalisation, and state the conclusions that the evaluation supports."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6260", "title": "Foundations of Computing", "code": "COMP6260", "learning_outcomes": ["Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments phrased in English or in a variety of formal notations (first order logic, discrete mathematics or Hoare logic). Express problems, presented in English, in these formal notations and demonstrate an awareness of the differences between them.", "Relate structural induction to other forms of mathematical induction, and write a recursive definition of a given simple operation on data of a given type presented via an inductive definition of the data structure.", "Explain the concept of program correctness and prove simple programs correct using Hoare Logic.", "Understand, analyse, and describe formal languages in a variety of representations including grammars and automata and Turing machines.", "Apply standard concepts of computability and complexity theory to classify computational problems."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6250", "title": "Professional Practice: Holistic Thinking and Communication", "code": "COMP6250", "learning_outcomes": ["Communicate effectively in written and spoken English to transfer complex knowledge and ideas to technical and non-technical audiences.", "Identify and use appropriate sources of information when developing professional documents.", "Maintain and develop appropriate, effective and professional forms of documentation.", "Demonstrate effective team membership skills and contribute collaboratively within diverse team environments.", "Articulate and reflect on the industry expectations of competence and conduct in engineering and computing professions."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6262", "title": "Logic", "code": "COMP6262", "learning_outcomes": ["Express reasoning problems using first order logical notation.", "Construct natural deduction proofs in first order logic and translate between calculi.", "Explain the relationship between rules of deduction and the semantics of logic.", "Critically assess and compare philosophical views on issues arising from elementary logic"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6300", "title": "Computer Organisation and Program Execution", "code": "COMP6300", "learning_outcomes": ["Describe the foundational concepts of computer systems.", "Explain the relationship between high-level languages and assembly languages, including function calls and basic control structures.", "Design, construct and analyse programs in assembly language.", "Evaluate computer systems at abstraction levels from software to individual digital circuits and account for the implications of machine-level choices."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6120", "title": "Software Engineering", "code": "COMP6120", "learning_outcomes": ["Apply modern requirements gathering and software design techniques in the context of a realistic software engineering process.", "Evaluate other people's code contributions using modern formal code inspection approaches.", "Apply correctly techniques for ensuring and assessing the quality of software.", "Competently analyse a modern large-scale software project with continuous integration.", "Work co-operatively in a team to solve a software engineering problem.", "Evaluate and justify the prioritisation of requirements."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4880", "title": "Computational Methods for Network Science", "code": "COMP4880", "learning_outcomes": ["Demonstrate a thorough understanding of the fundamental principles of using computational approaches to formulate and answer social science questions.", "Demonstrate a working understanding in the ethical concerns of data drive analysis and experiments in human behavior.", "Apply network analysis algorithms in practical contexts.", "Analyze results from network algorithms, and articulate their limitations.", "Communicate the process of formulating and solving computational social science problems to a team of professionals with computing and/or social sciences."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6310", "title": "Systems, Networks and Concurrency", "code": "COMP6310", "learning_outcomes": ["Model, design and program concurrent systems.", "Select appropriate modeling techniques, tools and mechanisms to solve a range of problems in concurrent and distributed systems. This includes the appropriate programming language and runtime environment for the task at hand.", "Analyse and debug concurrent programs.", "Understand the aspects of an operating system concerning scheduling, protection and memory management.", "Employ message passing locally and over networks to construct distributed systems", "Distinguish as well as connect conceptual concurrency with physical parallelism at all levels of a distributed system.", "Identify core aspects of operating systems and networks irrespective of the specific system at hand.", "Reflect critically on current concurrent and distributed systems tools and their limitations."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4820", "title": "Advanced Computing Internship", "code": "COMP4820", "learning_outcomes": ["Demonstrate a personal commitment to ethical behaviour, competent practice, meeting legal and regulatory requirements, taking responsibility for their own work and acknowledging the work of others.", "Demonstrate a commitment to safety and sustainability, appropriate engagement with relevant stakeholders, and identify, assess and manage risk.", "Communicate effectively and work productively in a multi-disciplinary team, using initiative and sound judgement, to achieve defined workplace objectives.", "Apply their knowledge and skills in computer science to explore and critically analyse a real-world problem; using creativity and innovation, identify and critically evaluate potential solutions to the problem; choose and implement a particular solution; and critically evaluate and analyse the outcomes and impact of this solution."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP6240", "title": "Relational Databases", "code": "COMP6240", "learning_outcomes": ["Describe the basic concepts of the relational model and understand its mathematical foundation;", "Use the SQL language to define, query and manipulate a relational database;", "Apply conceptual database modelling methods such as entity-relationship model to design a relational database;", "Apply database design methods on functional dependencies and \nnormal forms to evaluate the quality of a relational database design;", "Understand query processing and optimization, transaction and security management in a relational database management system.", "Understand the state of the art of database management\nsystems, and big data management challenges (Amazon's Dynamo, Google's\nBigTable, MongoDB and MapReduce)."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4712", "title": "Compiler Construction", "code": "COMP4712", "learning_outcomes": ["Explain how programs that process other programs treat the other programs as their input data, and describe the benefits of having program representations other than source code.", "Distinguish a language definition (syntax and semantics) from a particular language implementation (evaluation by interpreter or by compilation).", "Use formal grammars to specify the syntax of languages, and understand key issues of ambiguity, associativity and precedence.", "Sketch a low-level run-time representation of core language constructs, such as objects or closures.", "Identify and implement essential steps for automatically converting source code into assembly or other low-level languages.", "Define useful static analyses in terms of a conceptual framework such as data-flow analysis and use the results of a static analysis for program optimization."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4680", "title": "Advanced Topics in Machine Learning", "code": "COMP4680", "learning_outcomes": ["Review the fundamental concepts and techniques of theÂ machine learning advanced topic.", "Reflect critically on the suitability of studied concepts and techniques for solving machine learning problems.", "Critically read research papers in the advanced topic area.", "Plan and execute project work and/or a piece of research and scholarship in the advanced topic."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4650", "title": "Document Analysis", "code": "COMP4650", "learning_outcomes": ["differentiate between the basic probabilistic theories of language and document structure, information retrieval, and classification, clustering and document feature engineering.", "identify the basic algorithms and software available for probabilistic theories of language and be proficient at using common libraries for natural language processing to perform basic analysis tasks.", "index a document collection for use in an information retrieval system. Demonstrate advanced knowledge of basic theories and algorithms to determine large scale named-entity matching and standardization of names within a collection.", "perform automated classification using probabilistic theories."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP5920", "title": "Exchange Program in Computer Science", "code": "COMP5920", "learning_outcomes": ["NA"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4691", "title": "Optimisation", "code": "COMP4691", "learning_outcomes": ["Be able to apply Linear Programming and Mixed-Integer Programming model to solve real-world problems.", "Be able to recognize and formulate convex optimization problems arising in practice.", "Demonstrate an understanding of theoretical foundations of convex optimization and be able to use it to characterize optimal solutions to general problems.", "Be able to define an appropriate local search neighbourhood for a given problem.", "Be able to use a variety of meta-heuristics to escape local minima in a neighbourhood", "Demonstrate an understanding of the propagation of a global constraint in a Constraint programming system."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4620", "title": "Advanced Topics in Artificial Intelligence", "code": "COMP4620", "learning_outcomes": ["Gain both a wide and a deep knowledge of the topic(s) taught in the current instance of the course.", "Navigate through, and critically examine the scientific literature on the taught topic(s).", "Plan and execute project work and/or a piece of research and scholarship in the advanced topic(s)"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4670", "title": "Statistical Machine Learning", "code": "COMP4670", "learning_outcomes": ["Describe a number of models for supervised, unsupervised, and reinforcement machine learning", "Assess the strength and weakness of each of these models", "Interpret the mathematical equations from Linear Algebra, Statistics, and Probability Theory used in these machine learning models", "Implement efficient machine learning algorithms on a computer", "Design test procedures in order to evaluate a model", "Combine several models in order to gain better results", "Make choices for a model for new machine learning tasks based on reasoned argument"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4610", "title": "Computer Graphics", "code": "COMP4610", "learning_outcomes": ["Explain the stages of a modern, hardware-accelerated 3D rendering pipeline", "Construct and manipulate complex models, geometries and scene graphs in both 2D and 3D", "Implement computer graphics algorithms in a shader language"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4630", "title": "Overview of Logic and Computation", "code": "COMP4630", "learning_outcomes": ["Understand classical and non-classical logical systems and their significance", "Evaluate differences (advantages/disadvantages) of logical systems", "Analyse the syntax and semantics of logics and their meta-theoretical properties", "Apply translation principles for comparing different logical systems", "Create mathematical proofs in the area of formal logic", "Reflect on common logical systems and evaluate their limitations"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4350", "title": "Sound and Music Computing", "code": "COMP4350", "learning_outcomes": ["Describe and apply the fundamental concepts of sound and music computing.", "Apply collaboration skills with computer musicians through design feedback and critical self-reflection.", "Critically examine computer music systems, interfaces and performances.", "Create a computer musical instrument, composition or interactive media work."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4560", "title": "Advanced Computing Project", "code": "COMP4560", "learning_outcomes": ["apply their knowledge and implementation skills in computer science for the project course, and apply this to an advanced and specific project topic.", "deepen their knowledge of advanced computing principlesÂ  through undertaking the project.", "develop any specific technical skills required by their topic, and apply them to the project work.", "develop project-related skills, including project management and oral and written communication, and apply these to project work."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4528", "title": "Computer Vision", "code": "COMP4528", "learning_outcomes": ["Understand and master basic knowledge, theories and methods in image processing and computer vision.", "Identify, formulate and solve problems in image processing and computer vision.", "Analyse, evaluate and examine existing practical computer vision algorithms.", "Critically review and assess scientific literature in the field and apply theoretical knowledge to identify the novelty and practicality of proposed methods.", "Design and develop practical and innovative image processing and computer vision applications or systems.", "Conduct themselves professionally and responsibly in the areas of computer vision, image processing and deep learning."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4600", "title": "Advanced Algorithms", "code": "COMP4600", "learning_outcomes": ["Display a deep understanding of classical approximation and graph algorithms and their analysis.", "Analyze the efficiency and correctness of randomized algorithms and data structures.", "Demonstrate a good knowledge of parallel, distributed, and online algorithms.", "Design and analyze efficient algorithms using various advanced algorithmic techniques such as linear programming, graph theory, probability theory, and algebra.", "Understand, analyze, summarize, and present research publications in the area of algorithm design."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4450", "title": "Computing Research Methods", "code": "COMP4450", "learning_outcomes": ["Effectively communicate research questions, methods and outcomes in oral, written and graphical forms to a broad audience using appropriate tools.", "Justify and apply appropriate technological choices based on a consideration of the research question and methods.", "Apply effective literature search and critical evaluation skills.", "Explain the process of identifying and formulating research questions.", "Explain the role academic integrity and the importance of building upon and correctly attributing the work of others."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4500", "title": "Software Engineering Team Project", "code": "COMP4500", "learning_outcomes": ["Develop as a leading member of a transdisciplinary team that creatively identifies, implements, and delivers a software solution to a complex problem.", "Develop lifelong learning through reflection, as demonstrated through continual reflection on the software development lifecycle (SDLC) and teamwork processes experienced throughout the year.", "Demonstrate and develop the ability to employ team formation strategies and stages leading to a high-performing self-managing team.", "Present, communicate, and effectively defend sound engineering decisions at project reviews, both orally and in writing, with peers, supervisors, and project stakeholders.", "Demonstrate a sound understanding of project, configuration, and risk management processes when undertaking a software development project.", "Demonstrate a sound understanding of the different stages of the SDLC.", "Demonstrate a sound use of standards in software development."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4300", "title": "Parallel Systems", "code": "COMP4300", "learning_outcomes": ["Be proficient at programming multiple parallel machines in more than one special programming language or programming system", "Be able to descriptively compare the performance of different programs and methods on one machine", "Demonstrate advanced knowledge of the elements of parallel programming language and system implementation", "Recall the history of parallel systems and describe the developments in the field"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4011", "title": "Advanced Topics in Formal Methods and Programming Languages    ", "code": "COMP4011", "learning_outcomes": ["Demonstrate a broad knowledge in the advanced topic and its role and applications in modern computing systems", "Critically evaluate the scientific literature related to the advanced topic and/or applications of the advanced topic in modern computing systems", "Plan and execute project work and/or a piece of research and scholarship in the advanced topic"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4045", "title": "Advanced Topics in Computer Systems", "code": "COMP4045", "learning_outcomes": ["Demonstrate a broad knowledge in the advanced topic and its role and applications in modern computing systems", "Critically evaluate the scientific literature related to the advanced topic and/or applications of the advanced topic in modern computing systems", "Plan and execute project work and/or a piece of research and scholarship in the advanced topic"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP4130", "title": "Managing Software Quality and Process", "code": "COMP4130", "learning_outcomes": ["Assess and apply techniques for verification and validation of various artefacts that are typically produced during the development of small to large software systems.", "Assess and apply software process and measurement techniques which have been found to enhance the capability and maturity of software development organisations."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3900", "title": "Human-Computer Interaction", "code": "COMP3900", "learning_outcomes": ["Explain and illustrate key aspects of human-computer interaction.", "Apply multiple perspectives, theories, and ethical and inclusive considerations in critiquing technologies and prototyping and developing new design ideas.", "Investigate activities, practices, and contexts of technology use through contextual research methods.", "Critically evaluate novel technology design ideas based on Human-Computer Interaction approaches."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3820", "title": "Computing Internship", "code": "COMP3820", "learning_outcomes": ["Demonstrate a personal commitment to ethical behaviour, competent practice, meeting legal and regulatory requirements, taking responsibility for their own work and acknowledging the work of others.", "Demonstrate a commitment to safety and sustainability, appropriate engagement with relevant stakeholders, and identify, assess and manage risk.", "Communicate effectively and work productively in a multi-disciplinary team, using initiative and sound judgement, to achieve defined workplace objectives.", "Apply their knowledge and skills in computer science to explore and critically analyse a real-world problem; using creativity and innovation, identify and critically evaluate potential solutions to the problem; choose and implement a particular solution; and critically evaluate and analyse the outcomes and impact of this solution."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3740", "title": "Individual Project", "code": "COMP3740", "learning_outcomes": ["Apply the student's knowledge and implementation skills in the in computer science for the project course, and apply this to a specific project topic in that area.", "Deepen their knowledge of computing through undertaking the project.", "Apply any specific technical skills required by their topic, and apply them to the project work.", "Apply relevant project-related skills, including project management and oral and written communication, and apply these to the project work."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3710", "title": "Topics in Computer Science", "code": "COMP3710", "learning_outcomes": ["Learning Outcomes will be determined for each individual student and recorded in an 'Independent Study Contract' at the beginning of the course."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3620", "title": "Artificial Intelligence", "code": "COMP3620", "learning_outcomes": []},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3703", "title": "Software Security", "code": "COMP3703", "learning_outcomes": ["Demonstrate a thorough understanding of common sources of vulnerabilities in software.", "Demonstrate a thorough understanding in exploitation techniques against software vulnerabilities and defensive techniques against these exploitations.", "Demonstrate proficiency in software reverse engineering.", "Demonstrate proficiency in vulnerability discovery processes, from both source code and binary.", "Apply the vulnerability discovery techniques to real-world software, analyse their vulnerabilities and design and implement appropriate mitigation techniques."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3670", "title": "Introduction to Machine Learning", "code": "COMP3670", "learning_outcomes": ["Develop an appreciation for what is involved in learning from data.", "Understand basic data wrangling and data exploration.", "Describe a variety of machine learning tasks: clustering, dimensionality reduction, regression and classification.", "Understand how to formalise practical problems in terms of above tasks.", "Interpret mathematical equations from linear algebra, calculus, statistics, and probability theory in terms of machine learning methods.", "Understand how to perform evaluation of learning algorithms and model selection in practical problems."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3630", "title": "Theory of Computation", "code": "COMP3630", "learning_outcomes": ["Demonstrate advanced knowledge of formal computation and its relationship to languages", "Distinguish different computing languages and classify their respective types", "Recognise and comprehend formal reasoning about languages", "Demonstrate a competent understanding of the basic concepts of complexity theory"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3610", "title": "Principles of Programming Languages", "code": "COMP3610", "learning_outcomes": ["Understand the role of theoretical formalisms, such as operational and denotational semantics", "Apply these semantics in the context of programming languages", "Evaluate differences (advantages/disadvantages) of these theoretical formalisms", "Create operational or denotational semantics of simple imperative programs", "Analyse the role of types in programming languages", "Formalise properties and reason about programs", "Apply basic principles for formalising concurrent programming languages"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3704", "title": "Network Security", "code": "COMP3704", "learning_outcomes": ["Explain network security issues", "Understand various threats and vulnerabilities of a network, and explain appropriate countermeasures", "Perform simple penetration testing of a network and network services", "Perform a threat analysis / vulnerability assessment of protocol designs and implementations", "Design and implement appropriate defensive countermeasures against identified threats and vulnerabilities"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3770", "title": "Computing Research Project (R&D)", "code": "COMP3770", "learning_outcomes": ["plan and engage in an independent and sustained critical investigation and evaluation of a chosen computer science research topic,", "engage in systematic discovery and critical review of appropriate and relevant information sources,", "propose, develop and evaluate different approaches for solving a research problem, and", "communicate research concepts and contexts clearly and effectively, in writing and orally and in the production of a research-related artifact."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3540", "title": "Game Development", "code": "COMP3540", "learning_outcomes": ["Explain game development theory and architecture", "Apply appropriate techniques and tools in the production of video games", "Analyse how game elements influence player experience", "Work effectively in a team environment to create video games", "Successfully communicate game development ideas, concepts, designs, models, and processes"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3600", "title": "Algorithms", "code": "COMP3600", "learning_outcomes": ["Display a solid understanding of classical algorithms for fundamental computing problems such as sorting and searching and their analysis.", "Demonstrate knowledge of various data structures, such as binary search trees and heaps, and their applications.", "Design efficient algorithms using techniques such as greedy approaches and dynamic programming.", "Analyse the time and space complexity of algorithms."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3500", "title": "Software Engineering Project", "code": "COMP3500", "learning_outcomes": ["Work as an effective member of a team that creatively identifies, implements, and delivers a software solution to a complex problem.", "Develop lifelong learning through reflection, as demonstrated through continual reflection on the software development lifecycle (SDLC) and teamwork processes experienced throughout the year.", "Exhibit an awareness of team formation strategies and stages leading to the development of a high-performing self-managing team.", "Present, communicate, and effectively defend sound engineering decisions at project reviews, both orally and in writing, with peers, supervisors, and project stakeholders.", "Demonstrate experience in project, configuration, and risk management processes when undertaking a software development project.", "Demonstrate experience in the different stages of the SDLC.", "Demonstrate experience in and appropriate use of standards in software development."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3430", "title": "Data Wrangling", "code": "COMP3430", "learning_outcomes": ["Critically reflect upon different data sources, types, formats and structures,", "Justify and apply data cleaning, preprocessing, and standardisation for data analytics,", "Apply data integration concepts and techniques to heterogeneous and distributed data,", "Interpret, assess and discuss data quality measurements,", "Understand and be able to use advanced data wrangling, data integration, and database techniques as relevant to data analytics."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3425", "title": "Data Mining", "code": "COMP3425", "learning_outcomes": ["Critically analyse and justify the steps involved in the data mining process.", "Anticipate and identify data issues related to data mining.", "Test and apply the principal algorithms and techniques used in data mining.", "Justify suitable techniques to use for a given data mining problem.", "Appraise and reflect upon the results of a data mining project using suitable measurements.", "Reflect upon ethical and social impacts of data mining."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3310", "title": "Computer Networks", "code": "COMP3310", "learning_outcomes": ["Interpret and articulate the layered protocol model.", "Articulate, analyse and evaluate a number of datalink, network, and transport layer protocols.", "Program network communication services for client/server and other application layouts.", "Articulate, analyse and evaluate various related technical, administrative and social aspects of specific computer network protocols from standards documents and other primary materials found through research.", "Design, analyse, and evaluate networks and services for homes, data centres, IoT/IoE, LANs and WANs."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3320", "title": "High Performance Scientific Computation", "code": "COMP3320", "learning_outcomes": ["Appreciate the building blocks of scientific and engineering software.", "Demonstrate a basic knowledge of numerical computing using an appropriate programming language.", "Be competent in experimental computing in a numerical context and of the optimisation of algorithms on high performance architectures.", "Be able to reason about the accuracy of mathematical and numerical models of real physical phenomena.", "Have an awareness of the modern field of computational science and engineering and of the impact of high performance computing on science and industry.", "Have an understanding of the various paradigms of high performance computing and their potential for performance and programmability.", "Be capable of writing algorithms that yield good performance on high-performance architectures, and to be able to estimate and evaluate their performance."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP2710", "title": "Special Topics in Computer Science", "code": "COMP2710", "learning_outcomes": ["plan and execute project work and/or a piece of research and scholarship in the SpecialTopic", "demonstrate an understanding of the body of knowledge and theoretical concepts within the topic in written and/or oral form to a variety of audiences", "understand the Special topic and its role in modern Computing and applied contexts."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP3300", "title": "Operating Systems Implementation", "code": "COMP3300", "learning_outcomes": ["Identify and evaluate features of the system library of a particular operating system, and be able to apply this knowledge to program small applications", "Describe and analyse the actual algorithms and data structures that are used in a particular operating system", "Define and analyse the structure of operating systems in general, especially those that support communicating processes", "Identify and describe the reasons for many architectural features of contemporary machines", "Demonstrate experience in the design and implementation of a large software system"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP2620", "title": "Logic", "code": "COMP2620", "learning_outcomes": ["Express reasoning problems using first order logical notation.", "Construct natural deduction proofs in first order logic and translate between calculi.", "Explain the relationship between rules of deduction and the semantics of logic.", "Critically assess and compare philosophical views on issues arising from elementary logic."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP2700", "title": "Cyber Security Foundations", "code": "COMP2700", "learning_outcomes": []},
{"url": "https://programsandcourses.anu.edu.au/course/COMP2550", "title": "Computing R&D Methods", "code": "COMP2550", "learning_outcomes": ["Demonstrate an ability to communicate in relation to a computing project in oral, written and graphical forms, with an an appreciation of the need to pitch any communication item appropriately for the audience. This includes demonstrated skills in the writing of abstracts and research papers.", "Understanding of the process of identifying and formulating research problems.", "Ability to carry out literature searches and some ability to critically evaluate literature.", "Design and conduct experiments, devise appropriate measurements, analyze and interpret data and form reliable conclusions.", "Understanding of academic integrity and the importance of building upon and correctly attributing the work of others."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP2610", "title": "Information Theory", "code": "COMP2610", "learning_outcomes": ["Understand and apply fundamental concepts in information theory such as probability, entropy, information content and their inter-relationships.", "Understand the principles of data compression.", "Compute entropy and mutual information of random variables.", "Implement and analyse basic coding and compression algorithms.", "Understand the relationship of information theoretical principles and Bayesian inference in data modelling and pattern recognition.", "Understand some key theorems and inequalities that quantify essential limitations on compression, communication and inference.", "Know the basic concepts regarding communications over noisy channels."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP2310", "title": "Systems, Networks, and Concurrency", "code": "COMP2310", "learning_outcomes": ["Model, design and program concurrent systems.", "Select appropriate modeling techniques, tools and mechanisms to solve a range of problems in concurrent and distributed systems. This includes the appropriate programming language and runtime environment for the task at hand.", "Analyse and debug concurrent programs.", "Understand the aspects of an operating system concerning scheduling, protection and memory management.", "Employ message passing locally and over networks to construct distributed systems", "Distinguish as well as connect conceptual concurrency with physical parallelism at all levels of a distributed system.", "Identify core aspects of operating systems and networks irrespective of the specific system at hand."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP2400", "title": "Relational Databases", "code": "COMP2400", "learning_outcomes": ["Describe the basic concepts of the relational model and understand its mathematical foundation;", "Use the SQL language to define, query and manipulate a relational database;", "Apply conceptual database modelling methods such as entity-relationship model to design a relational database;", "Apply database design methods on functional dependencies and \nnormal forms to evaluate the quality of a relational database design;", "Understand query processing and optimization, transaction and security management in a relational database management system;", "Understand the state of the art of database management\nsystems, and big data management challenges (Amazon's Dynamo, Google's\nBigTable, MongoDB and MapReduce)."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP2300", "title": "Computer Organisation and Program Execution", "code": "COMP2300", "learning_outcomes": ["Describe the foundational concepts of computer systems.", "Explain the relationship between high-level languages and assembly languages, including function calls and basic control structures.", "Design, construct and analyse programs in assembly language.", "Evaluate computer systems at abstraction levels from software to individual digital circuits and account for the implications of machine-level choices."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP1720", "title": "Art and Interaction Computing", "code": "COMP1720", "learning_outcomes": ["Describe the qualities of computer-based artworks.", "Apply knowledge of visual and physical interaction with a computer interface.", "Design and construct computer programs in a programming language for interactive art.", "Create an original and creative work of interactive art."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP2120", "title": "Software Engineering", "code": "COMP2120", "learning_outcomes": ["Apply modern requirements gathering and software design techniques in the context of a realistic software engineering process.", "Evaluate other people's code contributions using modern formal code inspection approaches.", "Apply correctly techniques for ensuring and assessing the quality of software.", "Competently analyse a modern large-scale software project with continuous integration.", "Work co-operatively in a team to solve a software engineering problem."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP1730", "title": "Programming for Scientists", "code": "COMP1730", "learning_outcomes": ["Design and write programming code to solve practical problems of a scientific or engineering nature.", "Ability to read, test and debug small computer programs.", "Ability to use key python libraries for data processing and visualisation.", "Understanding of widely-used algorithms and data structures, and their computational complexity.", "Apply design approaches used in scientific pipelines, including data abstraction and array-based and object-oriented programming.", "Understand and apply principles of high code quality.", "Communicate effectively to both specialist and non-specialist audiences about data processing problems in writing and verbally."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP2100", "title": "Software Construction", "code": "COMP2100", "learning_outcomes": ["Apply object-oriented programming concepts for medium-scale software projects", "Understand the fundamentals of life cycle models for developing medium-scale software projects", "Apply and Evaluate software construction principles across various life cycle stages in medium-scale software projects", "Describe contractual specifications, analyse documentation and specifications against otherâ€™s code, develop, understand, test, and evolve substantial programs using a modern IDE, and Â Understand fundamental concepts of GUIs and user interfaces", "Understand basic concepts of intellectual property in software construction, considering ethical and social implications of technical decisions", "Apply and Evaluate techniques for data manipulation in medium-scale software projects"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP1710", "title": "Web Development and Design", "code": "COMP1710", "learning_outcomes": ["Understand and be able to develop and design web sites including multimedia content by applying current web design principles, guidelines and heuristics.", "Apply a user-centred focus to the development and design of web sites.", "Demonstrate knowledge of accessibility, compliance with standards, privacy concerns and personalisation for web sites.", "Understand and be able to separately control the content, the appearance and the behaviour of web sites.", "Understand and report on the nature and practice of human computer interaction research in an ethical environment."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP1140", "title": "Structured Programming (Advanced)", "code": "COMP1140", "learning_outcomes": ["Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems.", "Understand basic types and the benefits of static typing for object oriented programs.", "Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system.", "Use, execute and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems; implement an abstract data type.", "Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems.", "Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools.", "Explain the relationship between object-oriented inheritance (code-sharing and overriding) and subtyping (the idea of a subtype being usable in a context that expects the supertype).", "Use object-oriented encapsulation mechanisms such as interfaces and private members, and define and use iterators and other operations over aggregate values that take functions as arguments.", "Define and use program pieces (such as functions, classes, methods) that use generic types, including for collections.", "Explain how programming language implementations typically organize memory into global data, text, heap, and stack sections and how features such as recursion and memory management map to this memory model.", "Discuss the benefits and limitations of garbage collection, including the notion of reachability."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP1600", "title": "Foundations of Computing", "code": "COMP1600", "learning_outcomes": ["Apply the concepts of mathematical logic to formulate assertions and construct proofs or refutations in a variety of formalisms.", "Prove simple properties of recursive functions on inductively defined data structures using structural induction.", "Prove simple programs correct using Hoare Logic.", "Understand, analyse, and describe formal languages in a variety of representations including grammars and automata and Turing machines.", "Apply standard concepts of computability and complexity theory to classify computational problems."]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP1110", "title": "Structured Programming", "code": "COMP1110", "learning_outcomes": ["Apply fundamental programming concepts, using an object oriented programming language, to solve substantial problems", "Understand basic types and the benefits of static typing for object oriented programs", "Develop, understand, test, and evolve substantial programs using a modern IDE, and associated configuration tools; understand common coding errors and how to avoid them; practice fundamental defensive programming; perform individual and team program reviews; use established design principles to organize a software system", "Use, execute and evaluate fundamental data structures and associated algorithms; create, implement, debug, and evaluate algorithms for solving substantial problems; implement an abstract data type", "Apply basic algorithmic analysis to simple algorithms; use appropriate algorithmic approaches to solve problems", "Deliver and evaluate basic technical documents, presentations, and group interactions, using appropriate tools"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP1100", "title": "Programming as Problem Solving", "code": "COMP1100", "learning_outcomes": ["Apply fundamental programming concepts, using a functional programming language, to solve problems.", "Understand basic types and the benefits of static typing.", "Describe, understand and evolve programs, via documentation, testing, and debugging.", "Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving problems, including recursively, using divide-and-conquer, and via decomposition.", "Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (for example bruteforce, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).", "Understand and apply the concepts of parametric and ad-hoc polymorphism"]},
{"url": "https://programsandcourses.anu.edu.au/course/COMP1130", "title": "Programming as Problem Solving (Advanced)", "code": "COMP1130", "learning_outcomes": ["Apply fundamental programming concepts, using a functional programming language, to solve problems.", "Understand basic types and the benefits of static typing.", "Describe, understand and evolve programs, via documentation, testing, and debugging.", "Discuss, use, and apply the fundamentals of data structures, algorithms, and design; create, implement, and debug algorithms for solving problems, including recursively, using divide-and-conquer, and via decomposition.", "Discuss basic algorithmic analysis for simple algorithms; determine appropriate algorithmic approaches to a problem (for example bruteforce, greedy, divide-and-conquer, recursive backtracking, heuristic, dynamic programming).", "Understand and apply the concepts of parametric and ad-hoc polymorphism.", "Reflect on the fundamental mathematical concepts underlying functional programming.", "Use formal proof and structural induction to reason about the correctness of functional programs.", "Assessing the significance of different evaluation strategies, including laziness, for the computational behaviour of functional programs."]}
]